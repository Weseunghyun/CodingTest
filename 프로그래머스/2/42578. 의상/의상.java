import java.util.*;

class Solution {
     public int solution(String[][] clothes) {
        int answer = 1;
        Map<String, Integer> map = new HashMap<>();
        for (int i=0; i<clothes.length; i++) {
            map.put(clothes[i][1], map.getOrDefault(clothes[i][1], 0) + 1);
        }

          // 경우의 수 계산
        for (int count : map.values()) {
            answer *= (count + 1); // 각 종류별로 안 입는 경우(+1) 포함하여 곱함
        }
         
        return answer - 1;
    }
}

/*
2차원 배열 clothes 의 각 원소는 의상이름 의상종류이다.
총 1개 ~ 30개의 행이 존재할 수 있다. 의상은 중복되지않는다.
길이는 1~20 이하이다. 알파벳 소문자와 _로 이루어져있다.
순서를 고려하지않고 나올 수 있는 모든 옷을 입는 경우를 세어야한다.
의상을 1개는 입는다고 했으니 특정 종류에서 입지 않는 경우도 있다고 하는 것이다.
그렇다면 각 종류별로 있는 의상들 외에 입지않는 선택지도 있는 것이다.
그러면 예시를 통해 경우를 보자면 동그란 안경, 검정 선글라스, 입지않음
상의 파란색 티셔츠, 입지않음 이 있다고 해보자.
이때 순서를 따지지않고 나올 수 있는 모든 경우는 얼굴 경우의수 * 상의 경우의수이다.
총 6가지 경우가 나온다. 못믿겠으면 직접 세봐라
따라서 각 종류의 수를 세고 +1 만큼 해준 값들을 서로 곱해주면 된다.
하지만 주의해야할 점은 옷을 전부 입지않는 경우도 있다는 것이다.
따라서 그 경우는 빼줘야하니 -1 을 해줘야한다.
Map 을 통해서 종류와 종류의 개수를 구하고 곱해준 값에 -1 을 해준 값을 리턴하면된다.
*/